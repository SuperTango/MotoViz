<!doctype html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>MotoViz</title>
    <link rel="stylesheet" href="/css/style.css" />

<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />

<style type="text/css">
  html { height: 100% }
  body { height: 100%; margin: 0; padding: 0 }
  #map_canvas { height: 100% }
</style>
<script type="text/javascript"
    src="http://maps.googleapis.com/maps/api/js?sensor=false">
</script>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<script type="text/javascript" src="<% ui_url%>/Highcharts-2.1.6/js/highcharts.js"></script>
<script type="text/javascript" src="<% ui_url%>/Highcharts-2.1.6/js/themes/grid.js"></script>
<script type="text/javascript" src="<% ui_url%>/Highcharts-2.1.6/js/modules/exporting.js"></script>
<script type="text/javascript">
function sortBySeriesName ( a, b ) {
    if ( a.name < b.name ) {
        return -1;
    } 

    if ( a.name > b.name ) {
        return 1;
    }
    return 0;
}

var chart;
$(document).ready(function() {
    var ride_info;
    $.getJSON('<% api_url %>/v1/ride/<% user_id %>/<% ride_id %>?callback=?', function(data) {
                 ride_info = data;
                 //alert ( ride_info.miles_per_kwh );
            });

    $.getJSON('<% api_url%>/v1/points/<% user_id %>/<% ride_id %>?limit_points=200&callback=?', function(data) {
    
    var rideCoords = new Array();
    var numPoints = data.lat.length;
    var coordsHash = {};
    var myOptions = {
        zoom: 1,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

    for ( var i = 0; i < numPoints; i++ ) {
        var coord = new google.maps.LatLng ( data.lat[i][1], data.lon[i][1] );
        rideCoords.push ( coord );
        var s = "X" + data.lat[i][0];
        coordsHash[s] = coord;
    }

    var seriesArray = new Array();
    for ( var metric in data ) {
        if ( ( metric == "lat" ) || ( metric == "lon" ) || ( metric == "bearing" ) ) {
            continue;
        }
        var series = { data: data[metric], type: 'line', name: metric };
        if ( metric == "altitude" ) {
            series.yAxis = 1;
        } else if ( metric == "watts" ) {
            series.yAxis = 2;
        } else if ( metric == "distance_gps_delta" ) {
            series.yAxis = 3;
        }
        seriesArray.push ( series );
    }
    seriesArray.sort ( sortBySeriesName );

    var rideLine = new google.maps.Polyline ( {
        path: rideCoords,
        strokeColor: "#FF0000",
        strokeOpacity: 1.0,
        strokeWeight: 2
    } );
    var startMarker = new google.maps.Marker ( {
        position: new google.maps.LatLng ( data.lat[0][1], data.lon[0][1] ),
        animation: google.maps.Animation.DROP,
        title: "Start",
        icon: "http://motoviz.funkware.com/images/motorcycle.png",

    });
    var endMarker = new google.maps.Marker ( {
        position: new google.maps.LatLng ( data.lat[numPoints - 1][1], data.lon[numPoints - 1][1] ),
        animation: google.maps.Animation.DROP,
        title: "End",
        icon: "http://motoviz.funkware.com/images/parking.png",
    });
    var pointMarker = new google.maps.Marker( {
        map: map,
        visible: false } );

    chart = new Highcharts.Chart({
      chart: {
         renderTo: 'chart_container',
         zoomType: 'x',
         //spacingRight: 20,
         defaultSeriesType: 'spline',
      },
       title: {
         text: '<% title %>'
      },
       subtitle: {
         text: document.ontouchstart === undefined ?
            'Click and drag in the plot area to zoom in' :
            'Drag your finger over the plot to zoom in'
      },
      xAxis: {
         type: 'datetime',
         maxZoom: 30,
         title: {
            text: null
         }
      },
      yAxis: [
        {
        }, 
        {
            title: {
                text: "Altitude (feet)",
            },
            opposite: true
        },
        {
            title: {
                text: "Voltage (watts)",
            },
            opposite: true,
        },
        {
            title: {
                text: "distance delta (miles)",
            },
        },
      ],
      tooltip: {
          shared: true,
          formatter: function() {
              var dateObj = new Date( this.x );

              var s = '<b>'+ dateObj.toString() +'</b>';
             
              $.each(this.points, function(i, point) {
                  s += '<br/>'+ point.series.name +': '+ point.y;
              });
              var index = "X" + this.x;
              pointMarker.setPosition ( coordsHash[index] );
              pointMarker.setVisible ( true );
              return s;
          },
          shared: true,
          crosshairs: true,
      },
      legend: {
         enabled: true
      },
      series: seriesArray
    });

            /*
             * google maps
             */
        var latlng = new google.maps.LatLng(-34.397, 150.644);
        map.fitBounds ( new google.maps.LatLngBounds ( new google.maps.LatLng ( ride_info.lat_min, ride_info.lon_min ), new google.maps.LatLng ( ride_info.lat_max, ride_info.lon_max ) ) );
        rideLine.setMap ( map );
        startMarker.setMap ( map );
        endMarker.setMap ( map );
    });
   
});
    </script>
  </head>
  <body>
		<!-- 3. Add the container -->
		<div id="chart_container" style="width: 100%; height: 50%; margin: 0 auto"></div>
                <div id="map_canvas" style="width:100%; height:50%"></div>
  </body>
</html>

